1. Operator Overloading (연산자 오버로딩)
연산자 오버로딩은 C++에서 기존의 연산자(+, -, *, = 등)를 객체에 대해 사용할 수 있도록 그 의미를 재정의하는 기능입니다. 즉, 클래스에 대해 특정 연산자를 직접 구현하여, 객체끼리도 기본 타입처럼 연산할 수 있도록 만드는 것입니다.

2. Iterator (이터레이터)
이터레이터는 STL (Standard Template Library)에서 데이터를 순차적으로 접근하는 객체입니다. 이터레이터는 C++에서 배열, 벡터, 리스트 등의 컨테이너를 탐색하는 데 사용됩니다. 이터레이터는 포인터처럼 동작하여, 컨테이너의 요소를 한 번에 하나씩 접근할 수 있도록 도와줍니다.

이터레이터의 주요 연산에는 ++ (다음 요소로 이동), * (현재 요소의 값을 얻음) 등이 있습니다. 이터레이터는 컨테이너가 비슷한 방법으로 요소를 순회할 수 있도록 표준화된 방식입니다.

3. Overriding (오버라이딩)
오버라이딩은 상속 관계에서 부모 클래스의 메서드를 자식 클래스에서 재정의하는 것을 말합니다. 이는 부모 클래스의 기능을 자식 클래스에서 다른 방식으로 구현하기 위해 사용됩니다.

4. Node (노드)
노드는 연결 리스트(Linked List)와 같은 자료구조에서 데이터를 저장하는 기본 단위입니다. 노드는 데이터를 저장하고, 다음 노드를 가리키는 포인터를 포함합니다. 연결 리스트에서 각 노드는 다른 노드와 연결되어 있으며, 이러한 연결을 통해 리스트 전체가 구성됩니다.
